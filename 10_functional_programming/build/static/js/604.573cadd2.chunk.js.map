{"version":3,"file":"static/js/604.573cadd2.chunk.js","mappings":"oKAQMA,EAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAUtB,OACE,iCACE,0BAAOD,EAAME,SACb,mBAAQC,QAVM,WAChBF,GAAS,SAAAG,GAGP,MAFiB,CAAEF,MAAOE,EAAKF,MAAQ,EAGxC,GACF,EAIG,iBAGL,EAcD,UAZgB,WACd,OAA4BG,EAAAA,EAAAA,UAAS,CAAEH,MAAO,IAA9C,eAAQF,EAAR,KAAeC,EAAf,KAEA,OACE,+BACE,0BACE,SAACF,EAAD,CAAOC,MAAOA,EAAOC,SAAUA,OAItC,C","sources":["060_react_immutability/end/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\n  // POINT ReactでのImmutability\n  // 関数型（純粋関数）\n  // ・fn(決まった引数) -> 決まった戻り値\n  // ・関数外の状態（データ）は参照・変更しない。\n  // ・関数外に影響を及ぼさない。\n  // ・引数で渡された値を変更しない。（★Immutability）\nconst Child = ({ state, setState }) => {\n  // setState({ value: 1 })\n  // props.state = { value: 1 }\n  const increment = () => {\n    setState(prev => {\n      const newState = { value: prev.value + 1 }\n      // prev.value += 1;\n      return newState;\n    })\n  }\n  return (\n    <>\n      <span>{state.value}</span>\n      <button onClick={increment}>+</button>\n    </>\n  );\n};\n\nconst Example = () => {\n  const [ state, setState ] = useState({ value: 0 });\n\n  return (\n    <>\n      <div>\n        <Child state={state} setState={setState} />\n      </div>\n    </>\n  );\n};\n\nexport default Example;\n"],"names":["Child","state","setState","value","onClick","prev","useState"],"sourceRoot":""}