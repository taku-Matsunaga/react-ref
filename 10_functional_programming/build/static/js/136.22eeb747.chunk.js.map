{"version":3,"file":"static/js/136.22eeb747.chunk.js","mappings":"iJA+BA,UA/BgB,WAKd,IACaA,EAiBb,OACE,iCACE,qFAdW,CACbC,KAAM,CAAC,EAAE,EAAE,GACXC,IAFa,WAKX,IAFA,IAAMD,EAAOE,KAAKF,KACdG,EAAW,EACPC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAC9BD,GAAYH,EAAKI,GAEnB,OAAOD,CACR,GAKwBF,UACvB,kDApBSF,EADA,CAAC,EAAE,EAAE,GACIA,EAAKO,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,CAAvB,UAuBnC,C","sources":["010_data_procedure/end/Example.js"],"sourcesContent":["const Example = () => {\n  // POINT 関数型\n  // （値の）状態と処理を分離して管理\n  // A(data) -> B(data) -> C(data) -> 結果\n  // ★ 状態と処理は切り離す\n  const nums = [1,2,3];\n  const sum = (arry) => arry.reduce((accu, curr) => accu + curr)\n\n  // POINT オブジェクト指向型\n  // 状態（データ）と処理を対で管理\n  // obj.method(); -> 結果\n  const numObj = {\n    nums: [1,2,3],\n    sum() {\n      const nums = this.nums;\n      let sumValue = 0;\n      for(let i = 0; i < nums.length; i++) {\n        sumValue += nums[i];\n      }\n      return sumValue;\n    }\n  }\n\n  return (\n    <>\n      <div>オブジェクト指向型:{numObj.sum()}</div>\n      <div>関数型:{sum(nums)}</div>\n    </>\n  )\n};\n\nexport default Example;\n"],"names":["arry","nums","sum","this","sumValue","i","length","reduce","accu","curr"],"sourceRoot":""}